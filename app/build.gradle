apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'com.google.gms.google-services'

repositories {
  jcenter()
  mavenCentral()
  maven { url 'https://maven.fabric.io/public' }
  maven { url "https://jitpack.io" }
  maven { url "https://clojars.org/repo/" }
}

android {

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")
    generatedDensities = []

    jackOptions {
      enabled false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage' //Some libraries have issues with this.
    disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
    disable 'IconDensities' //For testing purpose. This is safe to remove.
    disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {

  def app = rootProject.ext.appDependencies
  def appTest = rootProject.ext.appTestDependencies

  //firebase
  //compile 'com.google.firebase:firebase-messaging:9.0.0'
  //compile 'com.google.firebase:firebase-core:9.0.0'

  //Support
  app.androidSupport
  app.androidSupportV4
  //Injection
  apt app.daggerCompiler
  compile app.dagger
  compile app.butterKnife
  //SDK
  compile app.recyclerView
  compile app.cardView
  compile app.design
  compile app.androidAnnotations
  compile app.palette
  //Rx
  compile app.rxJava
  compile app.rxAndroid
  provided app.javaxAnnotation
  //Network
  compile app.retrofit
  compile app.retrofitConverterGson
  compile app.retrofitRxAdapter
  compile app.okHttp
  compile app.okhttpLogging
  compile app.gson
  //Cache
  compile app.glide
  //Services
  compile(app.crashlytics) {
    transitive = true;
  }
  //MVP
  compile app.mosby
  compile app.mosbyViewstate
  //Other
  compile app.icepick
  provided app.icepickProcessor

  //Testing
  androidTestCompile appTest.junit
  androidTestCompile appTest.mockito
  androidTestCompile appTest.dexmaker
  androidTestCompile appTest.dexmakerMockito
  androidTestCompile appTest.espresso
  androidTestCompile appTest.testingSupportLib
}
